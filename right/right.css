.right-section {
flex-basis: 66%;
height: 100%;
display: flex;
flex-direction: column;
justify-content: flex-start;
align-items: flex-start;
position: relative;
overflow: hidden;
}

#gridImageContainer {
position: relative;      
overflow: auto; 
width: 100%;
height: 100%;        
}

#gridImageContainer::-webkit-scrollbar {
width: 5px;
}

#gridImageContainer::-webkit-scrollbar:horizontal {
height: 5px;
}

#gridImageContainer::-webkit-scrollbar-corner {
background: black;
}

#gridImageContainer::-webkit-scrollbar-track {
background: rgb(65, 77, 65);
}

#gridImageContainer::-webkit-scrollbar-thumb {
background: var(--mode-color-trans);
border-radius: 2px;
}

#gridImageContainer::-webkit-scrollbar-thumb:hover {
background: var(--mode-color);
}


 #imageCanvas {
position: absolute;       
top: 0;
left: 0;
z-index: 0;            
} 

#gridContainer {
position: relative;      
z-index: 1;   
}

#gridContainer::before {
    content: '';
    position: absolute;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;
    /* background-color: rgba(0, 255, 0, 0.168); */
    z-index: -1;
}

/* Define the flashing animation */
@keyframes flash {
0% {
filter: brightness(1);
}
50% {
filter: brightness(3); 
}
100% {
filter: brightness(1);

}
}


/* Apply the animation to the hex when selected */
.flashing {
animation: flash 0.5s infinite; /* Flash every 0.5 seconds, looping infinitely */
}

.grid-row {
display: flex;
flex: 0 0 auto;
}

.grid-cell {
flex: 0 0 auto;
position: relative;
width: 25px;
height: 25px;
border: 0.5px solid black;
background: var(--default-color);
opacity: 1;
transition: border-color 0.3s ease;
display: flex;
justify-content: center;
align-items: center;
}

.zone-cell {
flex: 0 0 auto;
position: relative;
width: 25px;
height: 25px;
border: 1.7px solid black;
background: rgb(29, 29, 29);
transition: border-color 0.3s ease;
display: flex;
justify-content: center;
align-items: center;
}

.grid-cell:hover .cellLabel{
color: var(--mode-color);
}

.hex-row {
display: flex;
flex: 0 0 auto;
}

.hex {
flex: 0 0 auto;
position: relative;
float: left;
margin-right: calc(var(--hex-margin-right, -12px));
margin-bottom: calc(var(--hex-margin-bottom, -25px));

}

.hex .left {
float: left;
width: 0;
border-right: calc(var(--hex-side, 15px)) solid var(--default-color);
border-top: calc(var(--hex-height, 26px)) solid transparent;
border-bottom: calc(var(--hex-height, 26px)) solid transparent;
transition: border-color 0.3s ease;
}

.hex .middle {
float: left;
width: calc(var(--hex-width, 30px));
height: calc(var(--hex-total-height, 52px));
background: var(--default-color);
transition: background-color 0.3s ease;
}

.hex .right {
float: left;
width: 0;
border-left: calc(var(--hex-side, 15px)) solid var(--default-color);
border-top: calc(var(--hex-height, 26px)) solid transparent;
border-bottom: calc(var(--hex-height, 26px)) solid transparent;
transition: border-color 0.3s ease;
}

.hex.colEven {
margin-top: calc(var(--hex-margin-top, 28px));
}

.hex:hover .middle,
.hex:hover .left,
.hex:hover .right { 
filter: brightness(1.5);
}


.hex:hover {
cursor: pointer;
}

.cellLabel {
display: block;
position: absolute;
font-family: "Cascadia";
white-space: nowrap;
color: whitesmoke;
padding: 0px;
border-radius: 3px;
z-index: 100;
pointer-events: none;
transition: opacity 0.2s ease;
left: 50%;
top: 50%;
transform: translate(-50%, -50%);
}

.hex:not(.colEven) .cellLabel {
margin-top: calc(var(--hex-margin-bottom, 28px) / 2); /* Adjust based on the vertical offset of odd columns */
}

.transparent {
opacity: 0; /* Adjust this value as needed */
pointer-events: none;

}

.zoning {
filter: brightness(2)
}

#canvasContainer {
position: absolute;       
top: 0;
left: 0;
z-index: 0; 
}

